plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id('kotlin-kapt')
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

def localProperties = new Properties()
try {
    localProperties.load(project.rootProject.file('local.properties').newDataInputStream())
} catch (Throwable t) {
    print(t)
}

android {
    namespace 'com.example.citycards'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.citycards"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.2.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        setProperty("archivesBaseName", "CityCard-$versionName")
    }

    flavorDimensions = ["environment"]

    productFlavors {
        dev {
            dimension  "environment"
            resValue("string", "google_maps_key", localProperties['MAPS_API_KEY_DEV'])
            versionNameSuffix "-dev"
            buildConfigField('int', 'FLAVOR_ID', '1')
            resValue("string", "logo", localProperties['LOGO_DEV'])
            buildConfigField('String', 'citycards_key', "\"${localProperties['CITY_API_DEV']}\"")
        }
        preproduction {
            dimension "environment"
            resValue("string", "google_maps_key", localProperties['MAPS_API_KEY_PREPROD'])
            versionNameSuffix "-preproduction"
            applicationIdSuffix ".preproduction"
            buildConfigField('int', 'FLAVOR_ID', '2')
            resValue("string", "logo", localProperties['LOGO_PREPROD'])
            buildConfigField('String', 'citycards_key', "\"${localProperties['CITY_API_PREPROD']}\"")
        }
        production {
            dimension "environment"
            resValue("string", "google_maps_key", localProperties['MAPS_API_KEY_PROD'])
            versionNameSuffix "-production"
            applicationIdSuffix ".production"
            buildConfigField('int', 'FLAVOR_ID', '3')
            resValue("string", "logo", localProperties['LOGO_PROD'])
            buildConfigField('String', 'citycards_key', "\"${localProperties['CITY_API_PROD']}\"")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        viewBinding true
        buildConfig true
    }
}

dependencies {

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.5'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.5'
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.2'
    implementation 'androidx.annotation:annotation:1.6.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'androidx.tracing:tracing-perfetto-handshake:1.0.0-rc01'
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'com.caverock:androidsvg:1.4'
    implementation 'com.google.maps.android:android-maps-utils:3.7.0'

    //Firebase

    implementation platform('com.google.firebase:firebase-bom:32.7.0')
    implementation("com.google.firebase:firebase-crashlytics")
    implementation 'com.google.firebase:firebase-analytics'

    //ROOM


    implementation("androidx.room:room-runtime:2.5.0")
    annotationProcessor("androidx.room:room-compiler:2.5.0")

// To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:2.5.0")

// optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:2.5.0")

// optional - RxJava2 support for Room
    implementation("androidx.room:room-rxjava2:2.5.0")

// optional - RxJava3 support for Room
    implementation("androidx.room:room-rxjava3:2.5.0")

// optional - Guava support for Room, including Optional and ListenableFuture
    implementation("androidx.room:room-guava:2.5.0")

// optional - Test helpers
    testImplementation("androidx.room:room-testing:2.5.0")

// optional - Paging 3 Integration
    implementation("androidx.room:room-paging:2.5.0")
}